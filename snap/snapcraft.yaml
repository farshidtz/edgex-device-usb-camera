name: edgex-device-usb-camera
base: core22
adopt-info: metadata

architectures:
  - build-on: amd64
  - build-on: arm64

grade: stable
confinement: strict

slots:
  edgex-secretstore-token:
    interface: content
    content: edgex-secretstore-token
    source:
      write: [$SNAP_DATA/device-usb-camera]

plugs:
  device-config:
    interface: content 
    target: $SNAP_DATA/config/device-usb-camera

apps:
  rtsp-simple-server:
    command: bin/source-env-file.sh $SNAP/bin/rtsp-simple-server $SNAP_DATA/config/rtsp-simple-server/config.yml
    daemon: simple
    install-mode: disable
    plugs: [network-bind]

  device-usb-camera:
    command: bin/device-usb-camera $CONFIG_PRO_ARG $CONF_ARG $REGISTRY_ARG
    command-chain:
      - bin/source-env-file.sh
    environment:
      CONFIG_PRO_ARG: "--cp=consul.http://localhost:8500"
      CONF_ARG: "--confdir=$SNAP_DATA/config/device-usb-camera/res"
      REGISTRY_ARG: "--registry"
      DEVICE_PROFILESDIR: "$SNAP_DATA/config/device-usb-camera/res/profiles"
      DEVICE_DEVICESDIR: "$SNAP_DATA/config/device-usb-camera/res/devices"
      SECRETSTORE_TOKENFILE: $SNAP_DATA/device-usb-camera/secrets-token.json
      # Add shared library object file to path for ffprobe/ffmpeg
      LD_LIB: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$LD_LIB/blas:$LD_LIB/lapack:$LD_LIB/pulseaudio
    daemon: simple
    install-mode: disable
    plugs: [network, network-bind, camera]


parts:      
  rtsp-simple-server:
    plugin: nil
    build-packages: [wget]
    override-pull: |
      VERSION=v0.19.2

      ARCH=$(dpkg --print-architecture)      
      if [ $ARCH == 'arm64' ]; then
        ARCH=arm64v8
      fi

      FILE=$(printf 'rtsp-simple-server_%s_linux_%s.tar.gz' "$VERSION" "$ARCH")
      URL=https://github.com/aler9/rtsp-simple-server/releases/download/$VERSION/$FILE

      # Download and extract archive
      wget --no-verbose $URL
      tar -xvf $FILE

      # Download license
      wget --no-verbose https://github.com/aler9/rtsp-simple-server/raw/main/LICENSE
    override-build: |
      sed --in-place \
          -e 's/rtmpDisable: no/rtmpDisable: yes/g' \
          -e 's/hlsDisable: no/hlsDisable: yes/g' \
          -e 's/protocols: \[udp, multicast, tcp\]/protocols: \[tcp\]/g' \
          -e 's/rtspAddress: :8554/rtspAddress = 127.0.0.1:8554/g' \
          rtsp-simple-server.yml

      install -DT rtsp-simple-server \
        $SNAPCRAFT_PART_INSTALL/bin/rtsp-simple-server
      install -DT rtsp-simple-server.yml \
        $SNAPCRAFT_PART_INSTALL/config/rtsp-simple-server/config.yml
      install -DT LICENSE \
        $SNAPCRAFT_PART_INSTALL/usr/share/doc/rtsp-simple-server/LICENSE

  device-usb-camera:
    after: [metadata]
    source: .
    plugin: make
    build-packages: [git, libzmq3-dev, pkg-config]
    build-snaps: [go/1.18/stable]
    stage-packages: 
      - libzmq5
      - ffmpeg
    override-build: |
      cd $SNAPCRAFT_PART_SRC

      # the version is needed for the build
      cp $SNAPCRAFT_STAGE/version.txt VERSION

      make build

      install -DT "./cmd/device-usb-camera" "$SNAPCRAFT_PART_INSTALL/bin/device-usb-camera"

      RES=$SNAPCRAFT_PART_INSTALL/config/device-usb-camera/res/
      mkdir -p $RES
      cp    cmd/res/configuration.toml $RES
      cp -r cmd/res/devices $RES
      cp -r cmd/res/profiles $RES
      
      DOC=$SNAPCRAFT_PART_INSTALL/usr/share/doc/device-usb-camera
      mkdir -p $DOC
      cp Attribution.txt $DOC/Attribution.txt
      cp LICENSE $DOC/LICENSE

      # The "which" command is used by goffmpeg package.
      # Copy it to local bins to bypass apparmor protection
      cp --dereference /usr/bin/which $SNAPCRAFT_PART_INSTALL/bin/which

  metadata:
    plugin: nil
    source: https://github.com/canonical/edgex-snap-metadata.git
    source-branch: appstream
    source-depth: 1
    override-build: |
      # install the icon at the default internal path
      install -DT edgex-snap-icon.png \
        $SNAPCRAFT_PART_INSTALL/meta/gui/icon.png
      
      # change to this project's repo to get the version
      cd $SNAPCRAFT_PROJECT_DIR
      if git describe ; then
        VERSION=$(git describe --tags --abbrev=0 | sed 's/v//')
      else
        VERSION="0.0.0"
      fi
      
      # write version to file for the build
      echo $VERSION > $SNAPCRAFT_STAGE/version.txt

      # set the version of this snap
      snapcraftctl set-version $VERSION
    parse-info: [edgex-device-usb-camera.metainfo.xml]

  helper-go:
    source: snap/local/helper-go
    plugin: make
    build-snaps: [go/1.18/stable]
    override-build: |
      cd $SNAPCRAFT_PART_SRC
      make build
      install -DT ./helper-go $SNAPCRAFT_PART_INSTALL/bin/helper-go

  local-bin:
    source: snap/local/bin
    plugin: dump
    organize:
      source-env-file.sh: bin/source-env-file.sh
